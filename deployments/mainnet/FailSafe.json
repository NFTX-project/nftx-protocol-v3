{
  "address": "0x8665664CD32B6263A9b716371814Dc8CecFb8F2B",
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "lastLockId",
              "type": "uint256"
            }
          ],
          "internalType": "struct FailSafe.Contract[]",
          "name": "_contracts",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "contracts",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "lastLockId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauseAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "lastLockId",
              "type": "uint256"
            }
          ],
          "internalType": "struct FailSafe.Contract[]",
          "name": "_contracts",
          "type": "tuple[]"
        }
      ],
      "name": "setContracts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xa5251b4a5ef148b82d946ca9e628054512d08d057890f2e21265a20c2ab352f5",
  "receipt": {
    "to": null,
    "from": "0xDEA9196Dcdd2173D6E369c2AcC0faCc83fD9346a",
    "contractAddress": "0x8665664CD32B6263A9b716371814Dc8CecFb8F2B",
    "transactionIndex": 70,
    "gasUsed": "657703",
    "logsBloom": "0x
    "blockHash": "0xaabd18c822db513bfbde5b245a58eddaf9eff2e54b541c582acd28f3aa419601",
    "transactionHash": "0xa5251b4a5ef148b82d946ca9e628054512d08d057890f2e21265a20c2ab352f5",
    "logs": [
      {
        "transactionIndex": 70,
        "blockNumber": 19385166,
        "transactionHash": "0xa5251b4a5ef148b82d946ca9e628054512d08d057890f2e21265a20c2ab352f5",
        "address": "0x8665664CD32B6263A9b716371814Dc8CecFb8F2B",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000dea9196dcdd2173d6e369c2acc0facc83fd9346a"
        ],
        "data": "0x",
        "logIndex": 161,
        "blockHash": "0xaabd18c822db513bfbde5b245a58eddaf9eff2e54b541c582acd28f3aa419601"
      }
    ],
    "blockNumber": 19385166,
    "cumulativeGasUsed": "6155924",
    "status": 1,
    "byzantium": true
  },
  "args": [
    [
      {
        "addr": "0x889f313e2a3FDC1c9a45bC6020A8a18749CD6152",
        "lastLockId": 4
      },
      {
        "addr": "0xC255335bc5aBd6928063F5788a5E420554858f01",
        "lastLockId": 0
      },
      {
        "addr": "0x6845fF5f102bEF9D785468F0bEb535b4687406E7",
        "lastLockId": 1
      },
      {
        "addr": "0x70A741A12262d4b5Ff45C0179c783a380EebE42a",
        "lastLockId": 4
      }
    ]
  ],
  "numDeployments": 1,
  "solcInputHash": "9a1edd62300768a4775caece43a1ebca",
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lastLockId\",\"type\":\"uint256\"}],\"internalType\":\"struct FailSafe.Contract[]\",\"name\":\"_contracts\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"contracts\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lastLockId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lastLockId\",\"type\":\"uint256\"}],\"internalType\":\"struct FailSafe.Contract[]\",\"name\":\"_contracts\",\"type\":\"tuple[]\"}],\"name\":\"setContracts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"@apoorvlathey\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Fail Safe\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Pause all operations at once. This contract must be set as guardian.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/FailSafe.sol\":\"FailSafe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[\":@mocks/=src/mocks/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@permit2/=lib/permit2/src/\",\":@src/=src/\",\":@test/=test/\",\":@uni-core/=src/uniswap/v3-core/\",\":@uni-periphery/=src/uniswap/v3-periphery/\",\":@uniswap/lib/=lib/solidity-lib/\",\":@uniswap/v2-core/=lib/v2-core/\",\":@uniswap/v3-core/contracts/=src/uniswap/v3-core/\",\":base64-sol/=src/uniswap/v3-periphery/libraries/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":permit2/=lib/permit2/\",\":solidity-lib/=lib/solidity-lib/contracts/\",\":solmate/=lib/permit2/lib/solmate/\",\":v2-core/=lib/v2-core/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"src/FailSafe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity =0.8.15;\\n\\n// inheriting\\nimport {Ownable} from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ninterface IPausable {\\n    function pause(uint256 lockId) external;\\n}\\n\\n/**\\n * @title Fail Safe\\n * @author @apoorvlathey\\n *\\n * @notice Pause all operations at once. This contract must be set as guardian.\\n */\\ncontract FailSafe is Ownable {\\n    struct Contract {\\n        address addr;\\n        uint256 lastLockId;\\n    }\\n\\n    Contract[] public contracts;\\n\\n    constructor(Contract[] memory _contracts) {\\n        setContracts(_contracts);\\n    }\\n\\n    function pauseAll() external onlyOwner {\\n        uint256 len = contracts.length;\\n        for (uint256 i; i < len; ) {\\n            Contract storage c = contracts[i];\\n\\n            for (uint256 j; j <= c.lastLockId; ) {\\n                IPausable(c.addr).pause(j);\\n\\n                unchecked {\\n                    ++j;\\n                }\\n            }\\n\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n    }\\n\\n    function setContracts(Contract[] memory _contracts) public onlyOwner {\\n        delete contracts;\\n\\n        uint256 len = _contracts.length;\\n        for (uint256 i; i < len; ) {\\n            contracts.push(_contracts[i]);\\n\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xbff18cc716f0039c74964c78fb6fbf54d36c015970a4655fe6e770d074d39105\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162000a5438038062000a5483398101604081905262000034916200024f565b6200003f3362000051565b6200004a81620000a1565b5062000356565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b03163314620001005760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b6200010e6001600062000189565b805160005b818110156200018457600183828151811062000133576200013362000340565b602090810291909101810151825460018082018555600094855293839020825160029092020180546001600160a01b0319166001600160a01b03909216919091178155910151908201550162000113565b505050565b5080546000825560020290600052602060002090810190620001ac9190620001af565b50565b5b80821115620001d75780546001600160a01b031916815560006001820155600201620001b0565b5090565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715620002165762000216620001db565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620002475762000247620001db565b604052919050565b600060208083850312156200026357600080fd5b82516001600160401b03808211156200027b57600080fd5b818501915085601f8301126200029057600080fd5b815181811115620002a557620002a5620001db565b620002b5848260051b016200021c565b818152848101925060069190911b830184019087821115620002d657600080fd5b928401925b81841015620003355760408489031215620002f65760008081fd5b62000300620001f1565b84516001600160a01b0381168114620003195760008081fd5b81528486015186820152835260409093019291840191620002db565b979650505050505050565b634e487b7160e01b600052603260045260246000fd5b6106ee80620003666000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c80638da5cb5b116100505780638da5cb5b146100c0578063b64fa984146100db578063f2fde38b146100ee57600080fd5b8063474da79a14610077578063595c6a67146100ae578063715018a6146100b8575b600080fd5b61008a610085366004610530565b610101565b604080516001600160a01b0390931683526020830191909152015b60405180910390f35b6100b6610139565b005b6100b661024f565b6000546040516001600160a01b0390911681526020016100a5565b6100b66100e93660046105d5565b6102b5565b6100b66100fc3660046106a9565b61039e565b6001818154811061011157600080fd5b6000918252602090912060029091020180546001909101546001600160a01b03909116915082565b6000546001600160a01b031633146101985760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b60015460005b8181101561024b576000600182815481106101bb576101bb6106cb565b9060005260206000209060020201905060005b8160010154811161024157815460405163136439dd60e01b8152600481018390526001600160a01b039091169063136439dd90602401600060405180830381600087803b15801561021e57600080fd5b505af1158015610232573d6000803e3d6000fd5b505050508060010190506101ce565b505060010161019e565b5050565b6000546001600160a01b031633146102a95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161018f565b6102b36000610480565b565b6000546001600160a01b0316331461030f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161018f565b61031b600160006104dd565b805160005b8181101561039957600183828151811061033c5761033c6106cb565b6020908102919091018101518254600180820185556000948552938390208251600290920201805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b039092169190911781559101519082015501610320565b505050565b6000546001600160a01b031633146103f85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161018f565b6001600160a01b0381166104745760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161018f565b61047d81610480565b50565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b508054600082556002029060005260206000209081019061047d91905b8082111561052c57805473ffffffffffffffffffffffffffffffffffffffff19168155600060018201556002016104fa565b5090565b60006020828403121561054257600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561058257610582610549565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156105b1576105b1610549565b604052919050565b80356001600160a01b03811681146105d057600080fd5b919050565b600060208083850312156105e857600080fd5b823567ffffffffffffffff8082111561060057600080fd5b818501915085601f83011261061457600080fd5b81358181111561062657610626610549565b610634848260051b01610588565b818152848101925060069190911b83018401908782111561065457600080fd5b928401925b8184101561069e57604084890312156106725760008081fd5b61067a61055f565b610683856105b9565b81528486013586820152835260409093019291840191610659565b979650505050505050565b6000602082840312156106bb57600080fd5b6106c4826105b9565b9392505050565b634e487b7160e01b600052603260045260246000fdfea164736f6c634300080f000a",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100725760003560e01c80638da5cb5b116100505780638da5cb5b146100c0578063b64fa984146100db578063f2fde38b146100ee57600080fd5b8063474da79a14610077578063595c6a67146100ae578063715018a6146100b8575b600080fd5b61008a610085366004610530565b610101565b604080516001600160a01b0390931683526020830191909152015b60405180910390f35b6100b6610139565b005b6100b661024f565b6000546040516001600160a01b0390911681526020016100a5565b6100b66100e93660046105d5565b6102b5565b6100b66100fc3660046106a9565b61039e565b6001818154811061011157600080fd5b6000918252602090912060029091020180546001909101546001600160a01b03909116915082565b6000546001600160a01b031633146101985760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b60015460005b8181101561024b576000600182815481106101bb576101bb6106cb565b9060005260206000209060020201905060005b8160010154811161024157815460405163136439dd60e01b8152600481018390526001600160a01b039091169063136439dd90602401600060405180830381600087803b15801561021e57600080fd5b505af1158015610232573d6000803e3d6000fd5b505050508060010190506101ce565b505060010161019e565b5050565b6000546001600160a01b031633146102a95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161018f565b6102b36000610480565b565b6000546001600160a01b0316331461030f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161018f565b61031b600160006104dd565b805160005b8181101561039957600183828151811061033c5761033c6106cb565b6020908102919091018101518254600180820185556000948552938390208251600290920201805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b039092169190911781559101519082015501610320565b505050565b6000546001600160a01b031633146103f85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161018f565b6001600160a01b0381166104745760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161018f565b61047d81610480565b50565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b508054600082556002029060005260206000209081019061047d91905b8082111561052c57805473ffffffffffffffffffffffffffffffffffffffff19168155600060018201556002016104fa565b5090565b60006020828403121561054257600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561058257610582610549565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156105b1576105b1610549565b604052919050565b80356001600160a01b03811681146105d057600080fd5b919050565b600060208083850312156105e857600080fd5b823567ffffffffffffffff8082111561060057600080fd5b818501915085601f83011261061457600080fd5b81358181111561062657610626610549565b610634848260051b01610588565b818152848101925060069190911b83018401908782111561065457600080fd5b928401925b8184101561069e57604084890312156106725760008081fd5b61067a61055f565b610683856105b9565b81528486013586820152835260409093019291840191610659565b979650505050505050565b6000602082840312156106bb57600080fd5b6106c4826105b9565b9392505050565b634e487b7160e01b600052603260045260246000fdfea164736f6c634300080f000a",
  "devdoc": {
    "author": "@apoorvlathey",
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Fail Safe",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "Pause all operations at once. This contract must be set as guardian.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3093,
        "contract": "src/FailSafe.sol:FailSafe",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 4296,
        "contract": "src/FailSafe.sol:FailSafe",
        "label": "contracts",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_struct(Contract)4292_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Contract)4292_storage)dyn_storage": {
        "base": "t_struct(Contract)4292_storage",
        "encoding": "dynamic_array",
        "label": "struct FailSafe.Contract[]",
        "numberOfBytes": "32"
      },
      "t_struct(Contract)4292_storage": {
        "encoding": "inplace",
        "label": "struct FailSafe.Contract",
        "members": [
          {
            "astId": 4289,
            "contract": "src/FailSafe.sol:FailSafe",
            "label": "addr",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 4291,
            "contract": "src/FailSafe.sol:FailSafe",
            "label": "lastLockId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}